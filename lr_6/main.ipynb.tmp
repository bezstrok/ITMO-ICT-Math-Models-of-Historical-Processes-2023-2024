{
 "cells": [
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from scipy.stats import norm\n",
    "import statsmodels.api as sm"
   ],
   "id": "75199f16e2a67df2"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": [
    "age = pd.read_csv('data/average_age.csv')\n",
    "wage = pd.read_csv('data/living_wage.csv')\n",
    "retirement = pd.read_csv('data/retirement_age.csv')"
   ],
   "id": "93a7bf92dce8b4e3"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": [
    "# retirement['year'] = pd.to_datetime(retirement['year'], format='%Y')\n",
    "age['date'] = pd.to_datetime(age['date'], format='%Y-%m-%d')\n",
    "wage['date'] = pd.to_datetime(wage['date'], format='%Y-%m-%d')\n",
    "retirement['date'] = pd.to_datetime(retirement['year'], format='%Y-%m-%d')"
   ],
   "id": "f9a3c8098ef32223"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": [
    "start_date = '2000-01-01'\n",
    "end_date = '2024-01-01'\n",
    "age = age[(age['date'] >= start_date) & (age['date'] < end_date)]\n",
    "wage = wage[(wage['date'] >= start_date) & (wage['date'] < end_date)]\n",
    "retirement = retirement[(retirement['date'] >= start_date) & (retirement['date'] < end_date)]"
   ],
   "id": "bf6bd51fe2876d7b"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": [
    "plt.figure(figsize=(16, 8))\n",
    "\n",
    "sns.lineplot(data=age, x='date', y='value', label='Средний возраст', linestyle='-', marker='o')\n",
    "sns.lineplot(data=retirement, x='date', y='value', label='Пенсионный возраст', linestyle='-', marker='o')\n",
    "\n",
    "plt.title('Изменение среднего возраста и пенсионного возраста в России')\n",
    "plt.xlabel('Дата')\n",
    "plt.ylabel('Возраст')\n",
    "plt.grid(True)\n",
    "plt.legend()\n",
    "\n",
    "plt.savefig('results/age_and_retirement.png')\n",
    "\n",
    "plt.close()"
   ],
   "id": "ba255072faefdd4b"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": [
    "plt.figure(figsize=(16, 8))\n",
    "\n",
    "sns.lineplot(data=wage, x='date', y='value', label='Прожиточный минимум', linestyle='-', marker='o')\n",
    "\n",
    "plt.title('Изменение прожиточного минимума в России')\n",
    "plt.xlabel('Дата')\n",
    "plt.ylabel('Прожиточный минимум')\n",
    "plt.grid(True)\n",
    "plt.legend()\n",
    "\n",
    "plt.savefig('results/wage.png')\n",
    "\n",
    "plt.close()"
   ],
   "id": "c02afa8d2f70460d"
  },
  {
   "metadata": {},
   "cell_type": "markdown",
   "source": "## Синтез данных",
   "id": "29d4b1aec34cc386"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": [
    "def generate_retirement_age(mean_age) -> int:\n",
    "    return int(norm.rvs(loc=mean_age, scale=1))\n",
    "\n",
    "def get_minimum_wage(year: int):\n",
    "    return wage.loc[wage[\"date\"].dt.year == year, \"value\"].values[0]\n",
    "\n",
    "def generate_survival(year: int) -> int:\n",
    "    p = 0.5 + (year - 2000) * 0.01\n",
    "    return int(np.random.choice([0, 1], p=[1-p, p]))"
   ],
   "id": "725a0857317192b6"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": [
    "data = []\n",
    "for year in range(2000, 2021):\n",
    "    mean_pension_age = retirement.loc[retirement['date'].dt.year == year, 'value'].values[0]\n",
    "    \n",
    "    for _ in range(1000):\n",
    "        pension_age = generate_retirement_age(mean_pension_age)\n",
    "        minimum_wage = get_minimum_wage(year)\n",
    "        survival = generate_survival(year)\n",
    "        data.append([year, pension_age, minimum_wage, survival])\n",
    "\n",
    "df = pd.DataFrame(data, columns=['year', 'pension_age', 'minimum_wage', 'survival'])\n"
   ],
   "id": "2a9fabadce210d8f"
  },
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": [
    "X = sm.add_constant(df[['pension_age', 'minimum_wage']])\n",
    "y = df['survival']\n",
    "\n",
    "logit_model = sm.Logit(y, X)\n",
    "result = logit_model.fit()\n",
    "\n",
    "result.summary()"
   ],
   "id": "74a06eac9e0e6df7"
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
